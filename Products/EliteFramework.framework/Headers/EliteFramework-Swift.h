// Generated by Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import QuartzCore;
@import Foundation;
@import CoreGraphics;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

@interface CALayer (SWIFT_EXTENSION(EliteFramework))
@end


@interface NSArray (SWIFT_EXTENSION(EliteFramework))
@end


@interface NSAttributedString (SWIFT_EXTENSION(EliteFramework))
- (CGFloat)heightWithConstrainedWidth:(CGFloat)width;
- (CGFloat)widthWithConstrainedHeight:(CGFloat)height;
@end

@class UIView;

@interface NSLayoutConstraint (SWIFT_EXTENSION(EliteFramework))
+ (NSLayoutConstraint * _Nonnull)constraintWithItem:(UIView * _Nonnull)item attribute:(NSLayoutAttribute)attribute;
+ (NSLayoutConstraint * _Nonnull)constraintWithItem:(UIView * _Nonnull)item attribute:(NSLayoutAttribute)attribute offset:(CGFloat)offset;
+ (NSArray<NSLayoutConstraint *> * _Nonnull)constraintsWithVisualFormat:(NSString * _Nonnull)format views:(NSDictionary<NSString *, id> * _Nonnull)views;
+ (NSArray<NSLayoutConstraint *> * _Nonnull)constraintsWithVisualFormat:(NSString * _Nonnull)format metrics:(NSDictionary<NSString *, id> * _Nullable)metrics views:(NSDictionary<NSString *, id> * _Nonnull)views;
+ (NSLayoutConstraint * _Nonnull)equalWithItem:(UIView * _Nonnull)item toItem:(UIView * _Nonnull)toItem attribute:(NSLayoutAttribute)attribute;
+ (NSLayoutConstraint * _Nonnull)equalWithItem:(UIView * _Nonnull)item toItem:(UIView * _Nonnull)toItem attribute:(NSLayoutAttribute)attribute offset:(CGFloat)offset;
+ (NSLayoutConstraint * _Nonnull)equalWithItem:(UIView * _Nonnull)item attribute:(NSLayoutAttribute)attribute;
+ (NSLayoutConstraint * _Nonnull)equalWithItem:(UIView * _Nonnull)item attribute:(NSLayoutAttribute)attribute offset:(CGFloat)offset;
+ (NSLayoutConstraint * _Nonnull)equalWithItem:(UIView * _Nonnull)item attribute:(NSLayoutAttribute)attribute toAttribute:(NSLayoutAttribute)toAttribute;
+ (NSLayoutConstraint * _Nonnull)equalWithItem:(UIView * _Nonnull)item attribute:(NSLayoutAttribute)attribute toAttribute:(NSLayoutAttribute)toAttribute multiplier:(CGFloat)multiplier;
+ (NSArray<NSLayoutConstraint *> * _Nonnull)equalWithItem:(UIView * _Nonnull)item toItem:(UIView * _Nonnull)toItem;
+ (NSLayoutConstraint * _Nonnull)constraintWithItem:(UIView * _Nonnull)item attribute:(NSLayoutAttribute)attribute equalAttribute:(NSLayoutAttribute)equalAttribute;
+ (NSLayoutConstraint * _Nonnull)constraintWithItem:(UIView * _Nonnull)item attribute:(NSLayoutAttribute)attribute equalAttribute:(NSLayoutAttribute)equalAttribute offset:(CGFloat)offset;
+ (NSLayoutConstraint * _Nonnull)constraintWithItem:(UIView * _Nonnull)item width:(CGFloat)width;
+ (NSLayoutConstraint * _Nonnull)constraintWithItem:(UIView * _Nonnull)item height:(CGFloat)height;
@end


@interface NSMutableArray (SWIFT_EXTENSION(EliteFramework))
@end


@interface UIButton (SWIFT_EXTENSION(EliteFramework))
- (CGRect)titleRectForContentRectWithRect:(CGRect)rect;
- (CGRect)imageRectForContentRectWithRect:(CGRect)rect;
@end


@interface UIColor (SWIFT_EXTENSION(EliteFramework))
- (nonnull instancetype)initWithHex:(uint64_t)hex;
- (nonnull instancetype)initWithHex:(uint64_t)hex alpha:(CGFloat)alpha;
@end


@interface UIImage (SWIFT_EXTENSION(EliteFramework))
- (nonnull instancetype)initWithColor:(UIColor * _Nonnull)color;
- (nonnull instancetype)initWithLayer:(CALayer * _Nonnull)layer;
- (CGFloat)radians:(double)degrees;
- (UIImage * _Nullable)trimImageWithMask:(CGRect)maskFrame;
- (UIImage * _Nonnull)scaleToSizeWithSize:(CGSize)size;
- (UIImage * _Nullable)compressWithMaxWidth:(double)maxWidth maxHeight:(double)maxHeight quality:(double)quality;
- (UIImage * _Nullable)rotateWithOrientation:(UIImageOrientation)orientation;
@end


@interface UIView (SWIFT_EXTENSION(EliteFramework))
@end

@class UIImagePickerController;

@interface UIViewController (SWIFT_EXTENSION(EliteFramework))
- (UIImagePickerController * _Nonnull)transferCameraViewController;
- (UIImagePickerController * _Nonnull)transferPhotoLibraryViewController;
- (void)alertControllerWithTitle:(NSString * _Nonnull)title button:(NSString * _Nonnull)button;
- (void)alertControllerWithTitle:(NSString * _Nonnull)title message:(NSString * _Nullable)message button:(NSString * _Nonnull)button;
@end

#pragma clang diagnostic pop
